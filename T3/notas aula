	RENDER:            PICKING: (parecido com rendering mas sem algumas funcoes, para evitar processamento desnecessario)

mesa.display();           NAO
peçasJogA.display();      SIM (Isto no caso de ser o jogador A a jogar.) (OU peçasJogA.displaySimplificado/BoundingBox() - desenha menos poligonos)
peçasJogB.display();      NAO


  JAVASCRIPT(cliente):       PROLOG(servidor):

Guarda estado do jogo     Nao guarda estado do jogo
Envia tabuleiro e jogada  Devolve SIM/NAO e novo estado (ATENCAO - Ao enviar tabuleiro para o prolog, terminar com um ponto)
Executa animacao/informa
de jogada invalida


Procedimento:
(0)- Tabuleiro à espera que o user 0 escolha uma peça 								 | Jogo à espera de input
   - Tabuleiro com peça escolhida e com shader, à espera que o user escolha um slot  | Jogo à espera de input
   - Tabuleiro com peça e slot escolhidos, envia input para o jogo (doMove(x,y))     | Jogo envia dados ao Prolog
   - Tabuleiro à espera de input, sem animacoes nem shader						     | Jogo à espera de resposta do Prolog
   - Tabuleiro a desenhar animação/avisar jogador de jogada nao possivel			 | Jogo envia resposta ao Tabuleiro
   - Tabuleiro volta ao estado (0)/passa ao outro jogador							 | Jogo volta ao estado (0) / passa ao outro jogador
